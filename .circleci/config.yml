version: 2.1

jobs:
  install:
    docker: &BUILDIMAGE
      - image: jenkinsrise/cci-v2-components:0.0.4
    steps:
      - checkout
      - restore_cache:
          key: node-cache-{{ checksum "package.json" }}
      - run: sudo npm install -g gulp
      - run: npm install
      - save_cache:
          key: node-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules

  build_and_test:
    docker: *BUILDIMAGE
    steps:
      - checkout
      - restore_cache:
          key: node-cache-{{ checksum "package.json" }}
      - run: npm test
      - persist_to_workspace:
          root: .
          paths:
            - dist

  gcloud-setup:
    docker: &GCSIMAGE
      - image: jenkinsrise/cci-v2-launcher-electron:0.0.6
        environment:
          WIDGETS_BASE: gs://widgets.risevision.com
    steps:
      - run: mkdir -p ~/.ssh
      - run: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run: git clone git@github.com:Rise-Vision/private-keys.git
      - run: mv private-keys ..
      - run: gcloud auth activate-service-account 452091732215@developer.gserviceaccount.com --key-file ../private-keys/storage-server/rva-media-library-ce0d2bd78b54.json
      - persist_to_workspace:
          root: ~/.config
          paths:
            - gcloud

  generate-version:
    docker: *BUILDIMAGE
    steps:
      - run: mkdir version-string
      - run: echo $(date +%Y.%m.%d.%H.%M) > version-string/version
      - persist_to_workspace:
          root: .
          paths:
            - version-string

  build-e2e-page:
    parameters:
      stage:
        type: string
    docker: *BUILDIMAGE
    steps:
      - attach_workspace:
          at: .
      - run: echo build rise-data-image e2e page << parameters.stage >>
      - run: git clone https://github.com/Rise-Vision/rise-data-image.git
      - run: |
          VERSION=$(cat version-string/version)
          sed "
            s!__STAGE__/common!staging/common/$VERSION!;
            s/__STAGE__/<< parameters.stage >>/;
            s!staging/components/rise-data-image/__VERSION__!<< parameters.stage >>/components/rise-data-image!;
            s/__PLAYER__/electron/;
            s/__CONNECTION__/websocket/;
          " rise-data-image/e2e/rise-data-image.html > rise-data-image/e2e/rise-data-image-electron.html
      - run: cp rise-data-image/e2e/polymer-e2e-electron.json rise-data-image/polymer.json
      - run: cat rise-data-image/e2e/rise-data-image-electron.html
      - run: |
          cd rise-data-image
          npm install
          polymer build
      - persist_to_workspace:
          root: ./rise-data-image/build
          paths:
            - base

  deploy-stage:
    docker: *GCSIMAGE
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          key: node-cache-{{ checksum "package.json" }}
      - run: mkdir -p ~/.config
      - run: cp -r gcloud ~/.config
      - run: |
          VERSION=$(cat version-string/version)
          TARGET=$WIDGETS_BASE/staging/common/$VERSION/
          echo Deploying version $VERSION to common
          gsutil cp dist/*.js $TARGET
          gsutil -m setmeta -r -h "Cache-Control:private, max-age=0" $TARGET
          gsutil acl -r ch -u AllUsers:R $TARGET

  deploy-e2e-page:
    parameters:
      stage:
        type: string
    docker: *GCSIMAGE
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          key: node-cache-{{ checksum "package.json" }}
      - run: mkdir -p ~/.config
      - run: cp -r gcloud ~/.config
      - run: |
          TARGET=$WIDGETS_BASE/<< parameters.stage >>/e2e/rise-data-image/electron
          echo Deploying << parameters.stage >> electron e2e page for rise-data-image
          gsutil rsync -d -r base $TARGET
          gsutil -m setmeta -r -h "Cache-Control:private, max-age=0" $TARGET
          gsutil acl -r ch -u AllUsers:R $TARGET

  test-e2e-electron:
    parameters:
      stage:
        type: string
      displayId:
        type: string
    docker: &E2EIMAGE
      - image: jenkinsrise/jenkinsrise-cci-image-launcher-electron-e2e:0.0.2
        environment:
          SCREENSHOTS_BASE: https://storage.googleapis.com/risevision-display-screenshots
          PLAYER_CONFIG: /home/circleci/rvplayer/RiseDisplayNetworkII.ini
    steps:
      - run: git clone https://github.com/Rise-Vision/rise-launcher-electron-e2e.git
      - run: |
          cd rise-launcher-electron-e2e
          npm install
      - run: mkdir ~/rvplayer
      - run: echo "displayid=<< parameters.displayId >>" > $PLAYER_CONFIG
      - run: echo proxy= >> $PLAYER_CONFIG
      - run:
          name: run the test
          command: |
            EXPECTED_SNAPSHOT_URL=$SCREENSHOTS_BASE/<< parameters.displayId >>.jpg
            cd rise-launcher-electron-e2e
            node test-display-runner.js << parameters.displayId >> $EXPECTED_SNAPSHOT_URL 20 << parameters.stage >>
      - run: mkdir output
      - run: mv ./rise-launcher-electron-e2e/*screenshot.jpg output
      - store_artifacts:
          path: output

  deploy-production:
    parameters:
      stage:
        type: string
    docker: *GCSIMAGE
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          key: node-cache-{{ checksum "package.json" }}
      - run: mkdir -p ~/.config
      - run: cp -r gcloud ~/.config
      - run: |
          TARGET=$WIDGETS_BASE/<< parameters.stage >>/common
          gsutil cp dist/*.js $TARGET
          gsutil -m setmeta -r -h "Cache-Control:private, max-age=0" $TARGET
          gsutil acl -r ch -u AllUsers:R $TARGET

workflows:
  workflow1:
    jobs:
      - install
      - build_and_test:
          requires:
            - install
      - gcloud-setup:
          filters:
            branches:
              only:
                - /^(stage|staging)[/].*/
                - master
                - build/stable
      - generate-version:
          requires:
            - install
          filters:
            branches:
              only:
                - /^(stage|staging)[/].*/
                - master
                - build/stable
      - deploy-stage:
          requires:
            - build_and_test
            - gcloud-setup
            - generate-version
          filters:
            branches:
              only:
                - /^(stage|staging)[/].*/
                - master
                - build/stable
      - build-e2e-page:
          stage: beta
          name: build-e2e-page-beta
          requires:
            - build_and_test
            - generate-version
          filters:
            branches:
              only:
                - master
                - /^(stage|staging)[/].*/
      - build-e2e-page:
          stage: stable
          name: build-e2e-page-stable
          requires:
            - build_and_test
            - generate-version
          filters:
            branches:
              only:
                - build/stable
      - deploy-e2e-page:
          stage: beta
          name: deploy-e2e-page-beta
          requires:
            - gcloud-setup
            - build-e2e-page-beta
          filters:
            branches:
              only:
                - master
                - /^(stage|staging)[/].*/
      - deploy-e2e-page:
          stage: stable
          name: deploy-e2e-page-stable
          requires:
            - gcloud-setup
            - build-e2e-page-stable
          filters:
            branches:
              only:
                - build/stable
      - test-e2e-electron:
          stage: beta
          displayId: 9YP68DHZ4HUJ
          name: test-e2e-electron-beta
          requires:
            - deploy-stage
            - deploy-e2e-page-beta
          filters:
            branches:
              only:
                - master
                - /^(stage|staging)[/].*/
      - test-e2e-electron:
          stage: stable
          displayId: U2SQ87Y5QM64
          name: test-e2e-electron-stable
          requires:
            - deploy-stage
            - deploy-e2e-page-stable
          filters:
            branches:
              only:
                - build/stable
      - deploy-production:
          stage: beta
          name: deploy-beta
          requires:
            - test-e2e-electron-beta
            - gcloud-setup
          filters:
            branches:
              only:
                - master
      - deploy-production:
          stage: stable
          name: deploy-stable
          requires:
            - test-e2e-electron-stable
            - gcloud-setup
          filters:
            branches:
              only:
                - build/stable
