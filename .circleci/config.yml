version: 2.1

jobs:
  build_and_test:
    docker: &BUILDIMAGE
      - image: jenkinsrise/cci-v2-components:0.0.4
    steps:
      - checkout
      - restore_cache:
          key: node-cache-{{ checksum "package.json" }}
      - run: sudo npm install -g gulp
      - run: npm install
      - save_cache:
          key: node-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: npm test
      - persist_to_workspace:
          root: .
          paths:
            - dist

  gcloud_setup:
    docker: &GCSIMAGE
      - image: jenkinsrise/cci-v2-launcher-electron:0.0.6
    steps:
      - run: mkdir -p ~/.ssh
      - run: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run: git clone git@github.com:Rise-Vision/private-keys.git
      - run: mv private-keys ..
      - run: gcloud auth activate-service-account 452091732215@developer.gserviceaccount.com --key-file ../private-keys/storage-server/rva-media-library-ce0d2bd78b54.json
      - persist_to_workspace:
          root: ~/.config
          paths:
            - gcloud

  generate_version:
    docker: *BUILDIMAGE
    steps:
      - run: mkdir version-string
      - run: echo $(date +%Y.%m.%d.%H.%M) > version-string/version
      - persist_to_workspace:
          root: .
          paths:
            - version-string

  build_e2e_page:
    parameters:
      stage:
        type: string
    docker: *BUILDIMAGE
    steps:
      - attach_workspace:
          at: .
      - run: echo build rise-data-image e2e page << parameters.stage >>
      - run: git clone https://github.com/Rise-Vision/rise-data-image.git
      - run: |
          VERSION=$(cat version-string/version)
          sed "
            s!__STAGE__/common!<< parameters.stage >>/common/$VERSION!;
            s/__STAGE__/<< parameters.stage >>/;
            s!staging/components/rise-data-image/__VERSION__!<< parameters.stage >>/components/rise-data-image!;
            s/__PLAYER__/electron/;
            s/__CONNECTION__/websocket/;
          " rise-data-image/e2e/rise-data-image.html > rise-data-image/e2e/rise-data-image-electron.html
      - run: cp rise-data-image/e2e/polymer-e2e-electron.json rise-data-image/polymer.json
      - run: cat rise-data-image/e2e/rise-data-image-electron.html
      - run: |
          cd rise-data-image
          npm install
          polymer build
      - persist_to_workspace:
          root: ./rise-data-image/build
          paths:
            - base

  deploy_to_gcs:
    parameters:
      stage:
        type: string
    docker: *GCSIMAGE
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          key: node-cache-{{ checksum "package.json" }}
      - run: mkdir -p ~/.config
      - run: cp -r gcloud ~/.config
      - run: |
          TARGET=gs://widgets.risevision.com/<< parameters.stage >>/common
          gsutil cp dist/*.js $TARGET
          gsutil -m setmeta -r -h "Cache-Control:private, max-age=0" $TARGET
          gsutil acl -r ch -u AllUsers:R $TARGET

workflows:
  workflow1:
    jobs:
      - build_and_test
      - generate_version
      - gcloud_setup:
          filters:
            branches:
              only:
                - master
                - build/stable
      - build_e2e_page:
          stage: beta
          requires:
            - build_and_test
            - generate_version
      - deploy_to_gcs:
          stage: beta
          requires:
            - build_e2e_page
            - gcloud_setup
          filters:
            branches:
              only:
                - master
      - deploy_to_gcs:
          stage: stable
          requires:
            - build_e2e_page
            - gcloud_setup
          filters:
            branches:
              only:
                - build/stable
